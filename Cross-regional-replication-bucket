resource "aws_s3_bucket" "bucket" {
  bucket = var.bucket_name
  region = var.region

  # Enable versioning for the bucket
  versioning {
    enabled = true
  }

  # Enable cross-region replication
  replication_configuration {
    role = aws_iam_role.replication_role.arn  # Specify the ARN of the IAM role for replication

    # Define rules for replication
    rules {
      id     = "cross-region-replication"
      status = "Enabled"

      destination {
        bucket = "arn:aws:s3:::destination-bucket"  # Specify the ARN of the destination bucket in another region
        storage_class = "STANDARD"  # Specify the storage class for replicated objects
      }

      # Specify the source selection criteria for replication
      source_selection_criteria {
        replica_modifications {
          status = "Enabled"
        }
      }
    }
  }
}

# IAM role for cross-region replication
resource "aws_iam_role" "replication_role" {
  name = "s3-replication-role"
  
  assume_role_policy = jsonencode({
    Version   = "2012-10-17",
    Statement = [{
      Effect    = "Allow",
      Principal = { Service = "s3.amazonaws.com" },
      Action    = "sts:AssumeRole"
    }]
  })
}

# IAM policy for cross-region replication
resource "aws_iam_policy" "replication_policy" {
  name        = "s3-replication-policy"
  description = "IAM policy for S3 cross-region replication"

  policy = jsonencode({
    Version   = "2012-10-17",
    Statement = [{
      Effect   = "Allow",
      Action   = [
        "s3:GetReplicationConfiguration",
        "s3:ListBucket",
        "s3:ReplicateObject",
        "s3:ReplicateDelete"
      ],
      Resource = [
        aws_s3_bucket.bucket.arn,
        "${aws_s3_bucket.bucket.arn}/*"
      ]
    }]
  })
}

# Attach IAM policy to IAM role
resource "aws_iam_policy_attachment" "replication_attachment" {
  name       = "s3-replication-attachment"
  roles      = [aws_iam_role.replication_role.name]
  policy_arn = aws_iam_policy.replication_policy.arn
}
